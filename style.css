:root {
  --dark-bg: #05060a;
  --dark-text: #e6eef6;
  --dark-slate: #0f1724;
  --dark-copy-bg: #0b1220;
  --dark-input-bg: #061021;
  --dark-result-bg: #071021;

  --light-bg: #ffffff;
  --light-text: #0b1220;
  --light-item-bg: #ffffff;
  --light-copy-bg: #ffffff;
  --light-input-bg: #ffffff;
  --light-result-bg: #f8fafc;
  --muted: #b8c3d2;
  --accent: orange;
  --light-brightness: 0.8;
  --dark-brightness: 3;
  --brightness: var(--light-brightness);
}

@media (prefers-color-scheme: dark) {
  :root {
    --brightness: var(--dark-brightness);
  }
}

:root:has(#auto-theme > :checked) {
  color-scheme: light dark;
}

:root:has(#light-theme > :checked) {
  color-scheme: light;
  --brightness: var(--light-brightness);
}

:root:has(#dark-theme > :checked) {
  color-scheme: dark;
  --brightness: var(--dark-brightness);
}

body {
  min-width: auto;
  min-height: 680px;
  width: max(100vw, 880px);
  height: 100vh;
  margin: 0;
  background-color: light-dark(var(--light-bg), var(--dark-bg));
  color: light-dark(var(--light-text), var(--dark-text));
  display: flex;
  flex-direction: column;
  & > main {
    flex: 1;
  }
}

button,
.material-symbols-outlined {
  user-select: none;
}

button:hover,
.dropdown,
label:hover {
  cursor: pointer;
}
label:has(:checked) {
  filter: brightness(var(--brightness));
}

:has(> .material-symbols-outlined) {
  display: flex;
  align-items: center;
  gap: 0.2em;
}

header {
  height: 2.6em;
  padding-inline: 2ch;
  border-bottom: solid 1px rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  gap: 2em;
  & > nav {
    flex: 1;
  }
}
h1 {
  font-size: 1.2em;
  margin: 0;
  & > .material-symbols-outlined {
    font-size: 2em;
  }
}

nav {
  height: 100%;
  display: flex;
  align-items: stretch;
}

.dropdown {
  position: relative;
  & > .dropdown-menu {
    position: absolute;
  }
}
.side-dropdown {
  position: relative;
  & > .side-dropdown-menu {
    position: absolute;
  }
}
.dropdown-label {
  height: 100%;
  .dropdown:focus-within > & {
    pointer-events: none;
  }
}
.dropdown-name {
  flex: 1;
}
.dropdown-menu,
.side-dropdown-menu {
  display: none;
  width: max-content;
  padding: 0;
  margin: 0;
  list-style: none;
  z-index: 999;
  & > li {
    display: flex;
  }
}
.dropdown-menu {
  transform: translateY(2.5px);
  &:hover:not(:focus),
  :focus + &,
  &:has(.side-dropdown-label:focus),
  &:has(.side-item:focus > input:not(:checked)) {
    display: block;
    .dropdown:has(:where(&, .side-dropdown-label:focus)) .dropdown-label {
      filter: brightness(var(--brightness));
    }
  }
}
.side-dropdown-menu {
  left: 100%;
  &:active,
  :focus + &,
  :focus + .dropdown-menu &:hover,
  .dropdown-menu:not(:focus-within) :hover + &,
  &:has(.side-item:focus > input:not(:checked)) {
    display: block;
    .side-dropdown:has(> &) .side-dropdown-label {
      filter: brightness(var(--brightness));
    }
  }
}
.item,
.side-item {
  width: 100%;
  pointer-events: all;
}

.dropdown-label,
.item,
.side-item {
  background-color: light-dark(var(--light-item-bg), var(--dark-slate));
  color: light-dark(var(--light-text), var(--dark-text));
  padding: 0.3em 0.6em;
  border: none;
  border-inline: solid 1px #ddd;
  &:active,
  &:hover {
    filter: brightness(var(--brightness));
  }
}
.dropdown-menu {
  &,
  & .item {
    border: solid 0.5px #ddd;
  }
}
.side-dropdown-menu {
  &,
  & .side-item {
    border: solid 0.5px #ddd;
  }
}
#new-button,
#auto-theme {
  border-bottom: solid 2px #ddd;
}

main {
  min-height: 0;
  display: flex;
  & > #blockly-editor {
    flex: 7;
    min-width: 600px;
    border-right: solid 1px rgba(0, 0, 0, 0.15);
  }
  & > aside {
    flex: 3;
    min-width: 280px;
    padding: 0.6em;
    padding-bottom: 0.3em;
    box-sizing: border-box;
  }
}
.blockly-toolbox {
  border-right: solid 1px rgba(0, 0, 0, 0.15);
}

.blocklyFlyoutBackground {
  stroke: #ccc;
  stroke-width: 2px;
}

aside {
  display: flex;
  flex-direction: column;
  gap: 1em;
  & > .result-container {
    flex: 1;
  }
}

h2 {
  font-size: 1em;
  margin: 0 0 10px;
}

.pattern-container,
.replace-container {
  display: flex;
  gap: 0.5em;
  & > :where(.regex-pattern, .replace-text) {
    flex: 1;
  }
  & > .copy-button {
    padding: 0;
    border: solid 1px #ddd;
    border-radius: 0.3em;
  }
}
.copy-button {
  background-color: light-dark(var(--light-copy-bg), var(--dark-copy-bg));
  display: flex;
  align-items: center;
  & > .material-symbols-outlined {
    font-size: 1.4em;
  }
}

.regex-pattern,
.replace-text,
.target-text,
.result-text {
  padding: 0.4em;
  color: light-dark(var(--light-text), var(--dark-text));
  background-color: light-dark(var(--light-input-bg), var(--dark-input-bg));
}
.target-text,
.result-text {
  font-size: 1.2em;
  box-sizing: border-box;
  white-space: pre;
  tab-size: 3;
}

.target-text {
  width: 100%;
  height: 160px;
  resize: none;
  &::placeholder {
    font-size: smaller;
  }
}
.result-container {
  &,
  :has(> &) {
    min-height: 0;
    display: flex;
    flex-direction: column;
  }
}
.result-text {
  background-color: light-dark(var(--light-result-bg), var(--dark-result-bg));
  min-height: 160px;
  max-height: 100%;
  overflow: scroll;
  margin: 0;
  border: solid 1px #e5e7eb;
}

mark {
  padding-inline: 0.05em;
  margin-inline: 0.07em;
  background-color: var(--accent);
}
.sp-mark,
.tb-mark,
.nl-mark {
  position: relative;
  &::before {
    position: absolute;
    color: var(--muted);
  }
}
.sp-mark {
  padding-inline: 0.05em;
}
.sp-mark::before {
  content: "␣";
  font-size: 0.4em;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}
.tb-mark::before {
  content: "⇥";
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}
.nl-mark::before {
  content: "⏎";
  font-size: 0.7em;
}
