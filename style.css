html,
body {
  min-width: fit-content;
  min-height: 700px;
  width: 100vw;
  height: 100vh;
}
body {
  margin: 0;
  display: flex;
  flex-direction: column;
  & > main {
    flex: 1;
  }
}

button,
.material-symbols-outlined {
  user-select: none;
}
button {
  cursor: pointer;
}
:has(> .material-symbols-outlined) {
  display: flex;
  align-items: center;
  gap: 0.2em;
}

header {
  height: 2.6em;
  padding: 0 2ch;
  border-bottom: solid 1px rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  gap: 2em;
  & > nav {
    flex: 1;
  }
}
h1 {
  font-size: 1.2em;
  margin: 0;
  & > .material-symbols-outlined {
    font-size: 2em;
  }
}

nav {
  height: 100%;
  display: flex;
  align-items: stretch;
}

.dropdown {
  position: relative;
  & > .dropdown-menu {
    position: absolute;
  }
}
.dropdown-label {
  height: 100%;
  &:focus {
    pointer-events: none;
  }
}
.dropdown-menu {
  display: none;
  width: max-content;
  padding: 0;
  margin: 0;
  z-index: 10;
  list-style: none;
  :focus + &,
  &:focus-within,
  &:active {
    display: block;
  }
}
.item {
  width: 100%;
  pointer-events: all;
}

.dropdown-label,
.item {
  background: white;
  padding: 0.3em 0.6em;
  border: none;
  border-inline: solid 1px #ddd;
  &:hover {
    filter: brightness(0.8);
  }
}
.dropdown-menu {
  &,
  & .item {
    border: solid 1px #ddd;
  }
}

main {
  min-height: 0;
  display: flex;
  & > #blockly-editor {
    flex: 6;
    min-width: 600px;
    border-right: solid 1px rgba(0, 0, 0, 0.15);
  }
  & > aside {
    flex: 3;
    min-width: 280px;
    padding: 0.6em;
    padding-bottom: 0.3em;
    box-sizing: border-box;
  }
}
.blockly-toolbox {
  border-right: solid 1px rgba(0, 0, 0, 0.15);
}

.blocklyFlyoutBackground {
  stroke: #ccc;
  stroke-width: 2px;
}

aside {
  display: flex;
  flex-direction: column;
  gap: 1em;
  & > .result-container {
    flex: 1;
  }
}

h2 {
  font-size: 1em;
  margin: 0 0 10px;
}

.pattern-container,
.replace-container {
  display: flex;
  gap: 0.5em;
  & > :where(.regex-pattern, .replace-text) {
    flex: 1;
  }
  & > .copy-button {
    padding: 0;
    border: solid 1px #ddd;
    border-radius: 0.3em;
  }
}
.copy-button {
  background: white;
  display: flex;
  align-items: center;
  & > .material-symbols-outlined {
    font-size: 1.4em;
  }
}

.regex-pattern,
.replace-text,
.target-text,
.result-text {
  padding: 0.4em;
}
.target-text,
.result-text {
  font-size: 1.2em;
  box-sizing: border-box;
}

.target-text {
  width: 100%;
  height: 160px;
  resize: none;
}
.result-container {
  &,
  :has(> &) {
    min-height: 0;
    display: flex;
    flex-direction: column;
  }
}
.result-text {
  background: #f8fafc;
  min-height: 120px;
  max-height: 100%;
  overflow: hidden;
  overflow-y: scroll;
  margin: 0;
  border: solid 1px #e5e7eb;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
}

mark {
  padding: 0 0.05em;
  margin: 0 0.1em;
  background: orange;
}
.sp-mark,
.tb-mark,
.nl-mark {
  color: #94a3b8;
}
.sp-mark {
  font-size: 0.8em;
}
.tb-mark {
  padding: 0 0.4em;
}
.nl-mark {
  font-size: 0.7em;
}
